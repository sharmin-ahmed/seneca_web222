// // // // // write a function that returns whether a parameter 
// // // // //passed is odd or even 
// // // // //using function declaration format 

// // // function evenorodd(a){
// // //     var str = "";
// // //     if(a%2==0)
// // //         str = "the number is even";
// // //     else    
// // //         str = "the number is odd";    
// // //     return str;    
// // // }
// // // console.log(evenorodd(7));

// // // // function expression format
// // // // assigning an anonymous function to a variable

// // // var evenorodd = function(a){
// // //     var str = "";
// // //     if(a%2==0)
// // //         str = "the number is even";
// // //     else    
// // //         str = "the number is odd";    
// // //     return str;    
// // // }
// // // console.log(evenorodd(7));


// // // // type of the variable is not needed
// // // // return if not added is added during runtime by js
// // // function add(a,b){
// // //     var c = a+b;
// // //     console.log(c);// 9
// // //     return;// undefined
// // //     // default return created during runtime
// // // }
// // // console.log(add(5,4));
// // // rest parameter format ...arr_name
// // // by default argumnets always take all the parameters into the arguments set

// // function sum(a,b,...c){
// //     var total = a+b;//7
// //     var total1 = 0;
// //     for(var i =0;i<c.length;i++){
// //         total1+=c[i];
// //     }
// //     console.log("the first index is "+c[0]);
// //     return total+" "+total1;
// // }
// // console.log(sum(3,4,5,6,7));

// // // rest parameter is an array
// // //  if you need a varying set of parameters as well as some fixed variables, 
// // // then you need to use REST parameters

// // optional and missing parameters

// // function to calculate the salary based on hourly rate, hours and optional bonus
// //default parameter

// function getSalary(rate, hours, bonus=0){
//     //var salary = 0;
//     //var salary = (bonus)?rate*hours+bonus:rate*hours;
//     // if(bonus)
//     //     salary = rate*hours+bonus;
//     // else
//     //     salary = rate*hours;
    
    
//     // either bonus is equal to the bonus value passed or if not there
//     // bonus is equal to 0
    
//     //bonus = bonus||0;
//     var salary = rate*hours+bonus;
//     return salary;    
// }
// console.log(getSalary(18,6,15));// bonus is present
// console.log(getSalary(18,6));// bonus is missing

// function getInfo(name, id, dept = "CSD"){
//     return name+id+dept;
// }
// console.log(getInfo("sharmin",12345));
// console.log(getInfo("Joel",4567,"ICT"));


// function execute(x){
//     return x();//x is a function that takes n as a parameter
// }
// function hello(){
//     return "hello";
// }
// console.log(execute(hello));
// // it is possible to pass a function as a parameter of a function
// console.log(execute(function(n){
//     return n*3;// take the parameter and multiply 3 to it
// },7));// parameter is 7

// console.log(execute(hello,"sharmin"));
// take the parameter and concatenate it with hello

// function hello(){
//     return "hello";
// }
// var hi = hello;// hi is now of type function

// console.log(hi());

// // var a = function(a,b){return a+b};
// // var a = (a,b)=>{return a+b};

// if you have a number as a string
//  you use parsefloat and parseint to parse the string to a number

// var a = "5";
// var  b =5;

// console.log(a+b);//concatenation

// if a variable is declared inside a function using the var keyword, then it has local 
// scope
// for evrything else, the scope is global

var display = "";     // Global variable
	ident_A = 5;           // Global variable - bad practice

	function someFunction() {   // Start of function

	     var ident_B = 15;      // Local  variable
	     ident_C     = 34;        // Global variable - bad practice
	     var ident_A = 0;           // local variable
	     ident_C++;                // increment ident_C by 1 
	     ident_A     = ident_B + ident_C; //15+35 = 50
	     console.log(ident_A);  // show the value of ident_A inside the function      

	} // End of function

	someFunction();   // 50  // call the function. If remove this line, what result?
	console.log(ident_A);// 5   // show the value of ident_A outside the function
	console.log(ident_C);// 35   // show the value of ident_C
	console.log(ident_B);   // what happens here?



















